 <div class="container-sm">
    <div class="station-main-titre mt-2">Recharger ma voiture</div>
    <div class="row">
      <% if params[:address] %>
        <% params[:address] != "" ? placeholder = params[:address] : placeholder = "Adresse..." %>
      <% else %>
        <% placeholder = "Adresse ..." %>
      <% end %>

      <%# Ci-dessous formulaire d'envoi des paramètres de filtre %>
      <%# Vérification pour définir la valeur sélectionnée dans la liste déroulante %>
      <% params[:plug] ? the_selected = params[:plug] : the_selected = "1" %>

      <%= form_with url: stations_path, method: :get, class: "" do |f| %>
        <div class="d-flex justify-content-start">
          <%= f.select :plug, options_for_select(@array_of_cars, selected: the_selected) %>
        </div>

        <div class="station-main-titre secondaire mt-2">Quand ?</div>
        <%= f.datetime_field :date_available, class: 'form-control formulaire' %>

        <div class="station-main-titre secondaire mt-2">Où ?</div>
        <div class="d-flex w-100 form-control justify-content-between mb-2 formulaire">
          <%= f.text_field :address, class: 'barre-de-recherche', id: "user_input_autocomplete_address", placeholder: placeholder %>
          <%= f.button nil, class: "barre-de-recherche" do %>
            <i class="fa-solid fa-magnifying-glass"></i>
          <% end %>
        </div>

        <!-- Champs cachés -->
        <input type="hidden" id="street_number" name="street_number">
        <input type="hidden" id="route" name="route">
        <input type="hidden" id="locality" name="locality">
        <input type="hidden" id="country" name="country">
      <% end %>

      <!-- ... Reste du code ... -->

    </div>
  </div>

  </div>
    <% @stations.each do |station| %>
    <% barreColor = station.user.xp < 25000 ? "#cad82e" : station.user.xp < 50000 ? "#5ea482" : station.user.xp < 75000 ? "#fecd4f" : "#fe9751"
       mateType = station.user.xp < 25000 ? "Mate Débutant" : station.user.xp < 50000 ? "Mate Avancé" : station.user.xp < 75000 ? "Super Mate" : "Top Mate"
       barreLength = (station.user.xp - ((station.user.xp.to_f / 1000).floor * 1000)) / 10
       userLevel = (station.user.xp.to_f / 1000).floor
       adresse = station.address.length < 35 ? station.address : station.address[0..35] + "..."
       codepostal = " " + station.address.scan(/\d{5}/)[0] if station.address.scan(/\d{5}/)[0]
    %>

      <div class="carte-station-index container-sm mt-3 d-flex flex-column justify-content-center mb-1">
        <div>
          <div class="image-station-index-filter" <% if station.photo.attached? %> style="background-image: url('<%= cl_image_path(station.photo.key, crop: :fill) %>')"<% end %>>
          </div>
          <div class="station-avatar-rond" <% if station.user.photo.attached? %> style="background-image: url('<%= cl_image_path(station.user.photo.key, crop: :fill) %>')"<% end %>></div>
          <div class="d-flex justify-content-between">
            <div class="d-flex flex-column">
              <div class="station-username d-flex align-items-end mt-2"><%= station.user.username.capitalize %> <div class="station-username-level ps-1"><%= userLevel %></div></div>
              <div class="mate-type-station"><%= mateType %></div>

               <% feuille_user = station.user.xp < 25000 ? Badge.f[0] : station.user.xp < 50000 ? Badge.f[1] : station.user.xp < 75000 ? Badge.f[2] : Badge.f[3] %>
              <div class="feuille-stations-show" style="background-image: url('<%= feuille_user%>');"></div>

              <div class="barre-de-niveau-station" style="--width-barre: <%= barreLength%>%; --color-barre: <%= barreColor%>;"></div>

            </div>
            <div class="d-flex flex-column align-items-end">
                <div class="mt-1 disponible-station">Disponible</div>
                <div class="mate-type-station bis"><%= params[:date_available].to_time.strftime("%d-%m-%Y") if params[:date_available] != "" %></div>


            </div>
          </div>
        </div>
        <div class="d-flex justify-content-between bouton-reserver-station" data-controller="toggle-address" >

                <div class="d-flex flex-column align-items-end">
                  <%= form_with model: [station, @booking] do |f| %>
                  <%= f.datetime_field :date_heure_reservation, :value => params[:date_available].to_time , class:"d-none"%>
                  <%= f.number_field :vehicle_id, :value => params[:plug], class: "d-none"%>
                  <%= f.submit "Reserver", class:"bouton-station-index-carte text-center border-none" %>
                  <% end %>
                </div>

                <% if station.address.length > 35 %>
                  <div data-toggle-address-target="smalla" data-action="click->toggle-address#toggle" class="station-adresse"><%= adresse + codepostal %></div>
                  <div data-toggle-address-target="biga" data-action="click->toggle-address#toggle" class="station-adresse d-none"><%= station.address %></div>
                  <% else %>
                  <div class="station-adresse"><%= station.address %></div>
                <% end %>

            </div>
      </div>
    <% end %>

  <!-- ... Code de la carte MapBox ... -->

  <!-- ... Lignes de coupure, espace, variable price, etc. ... -->

  <%# ci dessous affiche les stations ! %>
  <% if @stations.present? %>
    <div class="mb-4 p-1 <%= "d-none" if params[:address].blank? %>">
      <!-- ... Reste du code pour afficher les stations ... -->
    </div>

  <% end %>

  <div class="mt-5 pt-5"></div>

  <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>"></script>
  <script>
    // Votre script JavaScript pour l'autocomplétion
    function initializeAutocomplete(id) {
      var element = document.getElementById(id);

      if (element) {
        var autocomplete = new google.maps.places.Autocomplete(element, { types: ['geocode'] });
        google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);
      }
    }

    function onPlaceChanged() {
      var place = this.getPlace();

      // Mettre à jour les champs cachés avec les données de l'adresse sélectionnée
      document.getElementById('street_number').value = getAddressComponent(place, 'street_number');
      document.getElementById('route').value = getAddressComponent(place, 'route');
      document.getElementById('locality').value = getAddressComponent(place, 'locality');
      document.getElementById('country').value = getAddressComponent(place, 'country');
    }

    function getAddressComponent(place, componentType) {
      for (var i in place.address_components) {
        var component = place.address_components[i];
        for (var j in component.types) {
          if (component.types[j] === componentType) {
            return component.long_name;
          }
        }
      }
      return '';
    }

    // Appel de la fonction initializeAutocomplete avec l'ID de l'élément input
    initializeAutocomplete('user_input_autocomplete_address');
  </script>
*
